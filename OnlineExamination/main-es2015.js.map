{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin-dashboard/admin-dashboard.component.ts","./src/app/admin-dashboard/admin-dashboard.component.html","./src/app/admin-dashboard/assign-students-dialog/assign-students-dialog.component.ts","./src/app/admin-dashboard/assign-students-dialog/assign-students-dialog.component.html","./src/app/admin-dashboard/view-questions/view-questions.component.ts","./src/app/admin-dashboard/view-questions/view-questions.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/common-service.service.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/spinner/spinner.component.ts","./src/app/spinner/spinner.component.html","./src/app/student-dashboard/student-dashboard.component.ts","./src/app/student-dashboard/student-dashboard.component.html","./src/app/student-dashboard/test-component/test-component.component.ts","./src/app/student-dashboard/test-component/test-component.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { CommonServiceService } from '../common-service.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AssignStudentsDialogComponent } from './assign-students-dialog/assign-students-dialog.component';\n\n@Component({\n  selector: 'app-admin-dashboard',\n  templateUrl: './admin-dashboard.component.html',\n  styleUrls: ['./admin-dashboard.component.css']\n})\nexport class AdminDashboardComponent implements OnInit {\n  displayedColumns: string[] = ['testId', 'testName', 'noOfQuestions', 'AddQuestions', 'AddStudents', 'ShowStudents', 'ViewQuestions', 'Delete'];\n  dataSource;\n  userSession;\n\n  constructor(private route: ActivatedRoute, private commonServiceService: CommonServiceService, private router: Router, private dialog: MatDialog) { }\n  userDetails: any;\n  testId: number;\n\n  ngOnInit(): void {\n    if (this.commonServiceService.getUserSession() != null) {\n      this.commonServiceService.logIn('admin', 'admin').subscribe(data => {\n        if (data) {\n          if (data.RoleId == 1) {\n            this.userDetails = data;\n          }\n        }\n      });\n      this.getAllTests(1);\n      this.testId = Number(this.route.snapshot.paramMap.get('id'));\n    } else {\n      this.router.navigate(['']);\n    }\n  }\n\n  getAllTests(CustId: number) {\n    this.commonServiceService.GetTests(CustId).subscribe(data => {\n      if (data) {\n        this.dataSource = data;\n      }\n    })\n  }\n\n  addStudentClick(event) {\n    this.dialog.open(AssignStudentsDialogComponent,\n      {\n        width: '300px',\n        data: {\n          testId: event.testId,\n          DialogType: 'AddAssignStudents'\n        }\n      });\n  }\n\n  AssignedStudents(event) {\n    this.dialog.open(AssignStudentsDialogComponent,\n      {\n        width: '450px',\n        data: {\n          testId: event.testId,\n          DialogType: 'GetAssignStudents'\n        }\n      });\n  }\n\n  addTest() {\n    const dialogRef = this.dialog.open(AssignStudentsDialogComponent,\n      {\n        width: '500px',\n        height: '400px',\n        data: {\n          DialogType: 'AddTest'\n        }\n      });\n    dialogRef.afterClosed().subscribe(data =>\n      this.getAllTests(1)\n    );\n  }\n\n  addQuestions(event) {\n    const dialogRef = this.dialog.open(AssignStudentsDialogComponent,\n      {\n        width: '80%',\n        height: '70%',\n        data: {\n          testId: event.testId,\n          DialogType: 'AddQuestion'\n        }\n      });\n    dialogRef.afterClosed().subscribe(data =>\n      this.getAllTests(1)\n    );\n  }\n\n  deleteTest(TestId) {\n    this.commonServiceService.DeleteTests(TestId).subscribe(res => {\n      if (res) {\n        this.getAllTests(1)\n      }\n    })\n  }\n\n  viewTestsQuestions(event) {\n    this.router.navigate(['/adminViewQuestions'], { queryParams: { TestId: event.testId, TestName: event.testName } });\n  }\n\n}\n","<div class=\"btnAddTest\"><button mat-raised-button color=\"primary\" (click)=\"addTest()\">Add Test</button></div>\n<table *ngIf=\"dataSource != 0  else noTestBlock\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <!-- S.No Column -->\n    <ng-container matColumnDef=\"testId\">\n        <th mat-header-cell *matHeaderCellDef> S.no </th>\n        <td mat-cell *matCellDef=\"let element; let i = index;\"> {{i+1}} </td>\n    </ng-container>\n\n    <!-- Test Name Column -->\n    <ng-container matColumnDef=\"testName\">\n        <th mat-header-cell *matHeaderCellDef> Test Name </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.testName}} </td>\n    </ng-container>\n\n    <!-- No of Questions Column -->\n    <ng-container matColumnDef=\"noOfQuestions\">\n        <th mat-header-cell *matHeaderCellDef> No of Questions </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.noOfQuestions}} </td>\n    </ng-container>\n\n    <!-- Add Questions Column -->\n    <ng-container matColumnDef=\"AddQuestions\">\n        <th mat-header-cell *matHeaderCellDef> Add Questions </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"clickable\"><a (click)=\"addQuestions(element)\">Add Questions</a> </td>\n    </ng-container>\n\n    <!-- Assigned Students Column -->\n    <ng-container matColumnDef=\"ShowStudents\">\n        <th mat-header-cell *matHeaderCellDef> Assigned Students </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"clickable\"><a (click)=\"addStudentClick(element)\">Assign Students</a>\n        </td>\n    </ng-container>\n\n    <!-- Show Students Column -->\n    <ng-container matColumnDef=\"AddStudents\">\n        <th mat-header-cell *matHeaderCellDef> Show Students </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"clickable\"><a (click)=\"AssignedStudents(element)\">Show Students</a>\n        </td>\n    </ng-container>\n\n    <!-- View Questions Column -->\n    <ng-container matColumnDef=\"ViewQuestions\">\n        <th mat-header-cell *matHeaderCellDef> View Questions </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"clickable\" (click)=\"viewTestsQuestions(element)\"><a>View Questions</a>\n        </td>\n    </ng-container>\n\n    <!-- Delete Test Column -->\n    <ng-container matColumnDef=\"Delete\">\n        <th mat-header-cell *matHeaderCellDef> Delete Test </th>\n        <td mat-cell *matCellDef=\"let element\" class=\"clickable\" (click)=\"deleteTest(element.testId)\"><a>Delete</a> </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n<ng-template #noTestBlock>\n    <div class=\"noTestCLS\">\n        <h2>No Tests Available</h2>\n    </div>\n</ng-template>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { SimTest, selectedListModel, AddQuestions, AddChoices } from 'src/app/Models/CommonModels';\nimport { CommonServiceService } from 'src/app/common-service.service';\n\n@Component({\n  selector: 'app-assign-students-dialog',\n  templateUrl: './assign-students-dialog.component.html',\n  styleUrls: ['./assign-students-dialog.component.css']\n})\nexport class AssignStudentsDialogComponent implements OnInit {\n  displayedColumns: string[] = ['sNo','firstName','emailId'];\n  dialogType: string;\n  userSession = JSON.parse(localStorage.getItem('userSession'));\n  newStudentslist: selectedListModel[];\n  selectedStudentList: selectedListModel[];\n  checkedIDs;\n  questionsList: AddQuestions[] =[];\n  choice;\n  correctChiceSelect;\n  testId: number;\n  addStuBtn= true;\n  noStudenAssign = false;\n  constructor(private commonServiceService: CommonServiceService, public dialogRef: MatDialogRef<AssignStudentsDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  addTestform : FormGroup = new FormGroup ({\n    testName: new FormControl('', [Validators.required]),\n    duration: new FormControl('', [Validators.required]),\n    passPercentage: new FormControl('', [Validators.required])\n  });\n\n  addTestQuestions : FormGroup = new FormGroup ({\n    Question: new FormControl('', [Validators.required]),\n    ChoiceAnswer1: new FormControl('', [Validators.required]),\n    ChoiceAnswer2: new FormControl('', [Validators.required]),\n    ChoiceAnswer3: new FormControl('', [Validators.required]),\n    ChoiceAnswer4: new FormControl('', [Validators.required]),\n    correctChoice: new FormControl('', [Validators.required])\n  });\n  ngOnInit(): void {\n    this.dialogType = this.data.DialogType;\n    if(this.dialogType == 'GetAssignStudents') {\n      this.testId = this.data.testId;\n      this.GetAssignedStudentDetails();\n    }\n    if(this.dialogType == 'AddAssignStudents') {\n      this.testId = this.data.testId;\n      this.getStudentetails();\n    }\n    if(this.dialogType == \"AddQuestion\")  {\n      this.testId = this.data.testId;\n    }\n  }\n\n  addTestSubmit() {\n    if(this.addTestform.valid) {\n      let simTest: SimTest = {\n        TestId : 0,\n        TestName : this.addTestform.value.testName,\n        Duration : this.addTestform.value.duration,\n        NoOfQuestions : 0,\n        PassPercentage : this.addTestform.value.passPercentage,\n        CustId: 1\n      }\n      this.commonServiceService.addTest(simTest).subscribe(data=>{\n        if(data) {\n          this.dialogRef.close();\n        }\n      })\n\n    }\n  }\n\n  getStudentetails(){\n    this.commonServiceService.GetStudentDetails(this.testId).subscribe(data=>{\n      if(data) {\n        this.newStudentslist = data;\n      }\n    });\n  }\n\n  GetAssignedStudentDetails() {\n    this.commonServiceService.GetAssignedStudentDetails(this.testId).subscribe(data=>{\n      if(data) {\n        this.selectedStudentList = data;\n      }\n    });\n  }\n\n  addQuestionsToList() {\n    if(this.addTestQuestions.valid) {\n      let ChoiceAnswerList = [];\n      ChoiceAnswerList[0] = this.addTestQuestions.value.ChoiceAnswer1;\n      ChoiceAnswerList[1] = this.addTestQuestions.value.ChoiceAnswer2;\n      ChoiceAnswerList[2] = this.addTestQuestions.value.ChoiceAnswer3;\n      ChoiceAnswerList[3] = this.addTestQuestions.value.ChoiceAnswer4;\n      let choiceList : AddChoices[] = [];\n      for(let i=0; i<4 ; i++) {\n        let vl = 'ChoiceAnswer'+i;\n        choiceList[i] = {\n          ChoiceAnswer: ChoiceAnswerList[i],\n          CorrectChoice: this.correctChiceSelect == (i+1) ? true: false\n        }\n      }\n      let questionList: AddQuestions = {\n        TestId : this.testId,\n        Question: this.addTestQuestions.value.Question,\n        Choices: choiceList\n      };\n      this.questionsList.push(questionList);\n    }\n  }\n\n  saveAndNext() {\n    if(this.addTestQuestions.valid) {\n    this.addQuestionsToList();\n    this.addTestQuestions.reset();\n    }\n  }\n\n  saveAndSubmit() {\n    this.addQuestionsToList(); \n    this.commonServiceService.AddQuestions(this.questionsList).subscribe(data=>{\n      if(data) {\n        this.dialogRef.close();\n      }\n    })\n  }\n\n  studentChecked(event: any, custId:number) {\n    this.newStudentslist.find(x=>x.custId==custId).isChecked = event.checked;\n  }\n\n  AssignStudents() {\n    let Ids = this.newStudentslist.filter(x=>x.isChecked == true).map(x=>x.custId);\n    if(Ids.length>0){\n      this.addStuBtn = false;\n      let data:string[] = [];\n      data.push(this.testId.toString());\n      data.push(Ids.join(','));\n        this.commonServiceService.AssignStudents(data).subscribe(data=>{\n          this.dialogRef.close();\n        })\n      } else {\n        this.noStudenAssign = true;\n      }\n  }\n\n  // changeSelection() {\n  //   this.fetchSelectedItems()\n  // }\n\n  // fetchSelectedItems() {\n  //   this.selectedStudentList = this.newStudentslist.filter((value, index) => {\n  //     return value.isChecked\n  //   });\n  // }\n\n  // fetchCheckedIDs() {\n  //   this.checkedIDs  = []\n  //   this.newStudentslist.forEach((value, index) => {\n  //     if (value.isChecked) {\n  //       this.checkedIDs.push(value.custId);\n  //     }\n  //   });\n  // }\n\n}\n","<!-- Assign Student Starts -->\n<div *ngIf=\"dialogType === 'AddAssignStudents'\">\n    <h1 mat-dialog-title>Assign Students</h1>\n    <div *ngFor=\"let stu of newStudentslist\">\n        <label>\n    <mat-checkbox [value]=\"stu.custId\" (change)=\"studentChecked($event, stu.custId)\">\n      {{stu.firstName}}\n    </mat-checkbox>\n  </label>\n    </div>\n    <mat-error *ngIf=\"noStudenAssign\">No Students Selected</mat-error>\n    <div class=\"button\" style=\"display: flex; justify-content: flex-end;\">\n        <button mat-button mat-dialog-close>Close</button>\n        <div style=\"width: 10px;\"></div>\n        <button mat-raised-button color=\"primary\" (click)=\"AssignStudents()\" [disabled]=\"!addStuBtn\">Add</button>\n    </div>\n\n</div>\n<!-- Assign Student Ends -->\n\n<!-- View Assigned Students Starts-->\n<div *ngIf=\"dialogType === 'GetAssignStudents'\">\n    <table mat-table [dataSource]=\"selectedStudentList\" class=\"mat-elevation-z8\">\n        <ng-container matColumnDef=\"sNo\">\n            <th mat-header-cell *matHeaderCellDef> S.no </th>\n            <td mat-cell *matCellDef=\"let element; let i = index;\"> {{i+1}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"firstName\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.firstName}} </td>\n        </ng-container>\n        <ng-container matColumnDef=\"emailId\">\n            <th mat-header-cell *matHeaderCellDef> Email </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.emailId}} </td>\n        </ng-container>\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <div class=\"button\" style=\"display: flex; justify-content: flex-end;\">\n        <button mat-button mat-dialog-close>Close</button>\n    </div>\n</div>\n<!-- View Assigned Students Ends-->\n\n<!-- Add Test Starts-->\n<div *ngIf=\"dialogType === 'AddTest'\">\n    <h1 mat-dialog-title>Add Test</h1>\n    <form [formGroup]=\"addTestform\" (ngSubmit)=\"addTestSubmit()\">\n        <p>\n            <mat-form-field>\n                <input type=\"text\" matInput placeholder=\"Test Name\" formControlName=\"testName\" required>\n            </mat-form-field>\n        </p>\n        <p>\n            <mat-form-field>\n                <input type=\"number\" matInput placeholder=\"Duration in Minutes\" formControlName=\"duration\" required>\n            </mat-form-field>\n        </p>\n        <p>\n            <mat-form-field>\n                <input type=\"number\" matInput placeholder=\"Pass Percentage\" formControlName=\"passPercentage\" required>\n            </mat-form-field>\n        </p>\n        <div class=\"button\" style=\"display: flex; justify-content: flex-end;\">\n            <button mat-button mat-dialog-close>Close</button>\n            <div style=\"width: 10px;\"></div>\n            <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\n        </div>\n    </form>\n</div>\n<!-- Add Test Ends-->\n\n<!-- Add Questions Starts -->\n<div *ngIf=\"dialogType === 'AddQuestion'\">\n    <form [formGroup]=\"addTestQuestions\">\n        <p>\n            <mat-form-field class=\"addQueInput\" required>\n                <input type=\"text\" matInput placeholder=\"Question\" formControlName=\"Question\" required>\n            </mat-form-field>\n        </p>\n        <p>\n            <mat-form-field class=\"addQueInput\">\n                <input type=\"text\" matInput placeholder=\"Choice Answer\" formControlName=\"ChoiceAnswer1\" required>\n            </mat-form-field>\n        </p>\n        <p>\n            <mat-form-field class=\"addQueInput\">\n                <input type=\"text\" matInput placeholder=\"Choice Answer\" formControlName=\"ChoiceAnswer2\" required>\n            </mat-form-field>\n        </p>\n        <p>\n            <mat-form-field class=\"addQueInput\">\n                <input type=\"text\" matInput placeholder=\"Choice Answer\" formControlName=\"ChoiceAnswer3\" required>\n            </mat-form-field>\n        </p>\n        <p>\n            <mat-form-field class=\"addQueInput\">\n                <input type=\"text\" matInput placeholder=\"Choice Answer\" formControlName=\"ChoiceAnswer4\" required>\n            </mat-form-field>\n        </p>\n        <P>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Correct Option</mat-label>\n                <mat-select [(value)]=\"correctChiceSelect\" formControlName=\"correctChoice\" required>\n                    <mat-option>None</mat-option>\n                    <mat-option value=1>1</mat-option>\n                    <mat-option value=2>2</mat-option>\n                    <mat-option value=3>3</mat-option>\n                    <mat-option value=4>4</mat-option>\n                </mat-select>\n            </mat-form-field>\n        </P>\n        <div class=\"button\" style=\"display: flex; justify-content: flex-end;\">\n            <button mat-button mat-dialog-close>Close</button>\n            <div style=\"width: 10px;\"></div>\n            <button mat-raised-button color=\"primary\" (click)=\"saveAndNext()\">Save and Next</button>\n            <div style=\"width: 10px;\"></div>\n            <button mat-raised-button color=\"primary\" (click)=\"saveAndSubmit()\">Save and Close</button>\n        </div>\n    </form>\n</div>\n<!-- Add Questions Ends -->","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CommonServiceService } from 'src/app/common-service.service';\n\n@Component({\n  selector: 'app-view-questions',\n  templateUrl: './view-questions.component.html',\n  styleUrls: ['./view-questions.component.css']\n})\nexport class ViewQuestionsComponent implements OnInit, OnDestroy {\n  testPapers: any;\n  AlphabetCollection: string[] = ['a', 'b', 'c', 'd'];\n  TestId:Number;\n  TestName:string;\n  questionsLengthExists: boolean;\n  constructor(private commonServiceService: CommonServiceService, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe(queryParams => {\n      this.TestId = Number(queryParams['TestId']);\n      this.TestName = queryParams['TestName'];\n    });\n    this.commonServiceService.GetTestPapersAdmin(this.TestId).subscribe(res => {\n      if(res){\n        this.testPapers = res;\n        this.questionsLengthExists = this.testPapers.length>0? true: false;\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.TestId = null;\n    this.TestName = null;\n  }\n}\n","<h1 style=\"display: flex; justify-content: center;\">{{TestName}} Test Questions</h1>\n<div *ngIf=\"questionsLengthExists else NoQuestions\">\n    <div style=\"display: flex; justify-content: flex-end; margin-right: 5%;\"><p style=\"font-weight:bold\">Note: </p> <p>Correct ansers are bolded</p></div>\n    <div *ngFor=\"let question of testPapers index as i\">\n         <p style=\"margin-left: 10%;\">{{i+1}}.  {{question.question}}</p>\n        <div *ngFor=\"let choice of question.choices index as j\">\n            <p style=\"margin-left: 13%;\" [ngStyle]=\"{'font-weight': choice.choiceId === question.correctId ? 'Bold': '100'}\">\n                {{AlphabetCollection[j]}}.  {{choice.choiceAnswer}}</p>\n        </div>\n        <br/>\n    </div>\n</div>\n<ng-template else #NoQuestions><h2 style=\"display: flex; justify-content: center; margin-top: 10%;\">No Questions Assigned</h2></ng-template>\n<div class=\"btnBack\"><button mat-raised-button color=\"primary\" routerLink=\"/adminDashBoard\" routerLinkActive=\"active\">Back</button></div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { StudentDashboardComponent } from './student-dashboard/student-dashboard.component';\nimport { ViewQuestionsComponent } from './admin-dashboard/view-questions/view-questions.component';\nimport { TestComponentComponent } from './student-dashboard/test-component/test-component.component';\n\n\nconst routes: Routes = [\n  {path: '', component: LoginComponent, pathMatch: 'full'},\n  {path: 'signUp', component: SignupComponent},\n  {path: 'adminDashBoard', component:  AdminDashboardComponent},\n  {path: 'studentDashBoard', component:  StudentDashboardComponent},\n  {path: 'adminViewQuestions', component:  ViewQuestionsComponent},\n  {path: 'testComponentComponent', component:  TestComponentComponent}\n  // {path: 'adminViewQuestions', component:  ViewQuestionsComponent, data : {some_data : 'some value'}}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonServiceService } from './common-service.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'OnlineExamination';\n  sessonAvailable: boolean = false;\n  // userSession: any = ( JSON.parse(localStorage.getItem('userSession')) == null ||  JSON.parse(localStorage.getItem('userSession')) == undefined) ? null  : JSON.parse(localStorage.getItem('userSession'));\n  // isSessionLogin =  this.userSession == null? 0: 1;\n  // firstName = this.isSessionLogin == 1 ? this.userSession.firstName: '';\n\n  constructor(private router: Router, private commonServiceService: CommonServiceService) {\n    commonServiceService.isVisibleSource.subscribe((isVisible: boolean) => {\n      this.sessonAvailable = isVisible;\n  });\n  }\n\n  ngOnInit(): void {\n    this.sessonAvailable = JSON.parse(localStorage.getItem('userSession')) != null ? true: false;\n  }\n\n  // sessionCheck() : any []{\n  //   // return ( JSON.parse(localStorage.getItem('userSession')) == null ||  JSON.parse(localStorage.getItem('userSession')) == undefined) ? null  : JSON.parse(localStorage.getItem('userSession'));\n  // }\n\n  logout() {\n    localStorage.setItem('userSession', null);\n    this.sessonAvailable = false;\n    this.router.navigate(['']);\n\n  }\n}\n","<mat-toolbar color=\"primary\">\r\n    <span class=\"titleName\">Online Examination</span>\r\n    <div _ngcontent-kte-c50=\"\" style=\"flex-grow: 1;\"></div>\r\n    <!-- <div *ngIf=\"isSessionLogin == 1\"> -->\r\n        \r\n        <button *ngIf=\"sessonAvailable\" class=\"signUp\" (click)=\"logout()\" mat-button>\r\n            <span class=\"iconify\" data-icon=\"mdi-logout\" data-inline=\"false\" ></span>LogOut</button>\r\n</mat-toolbar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport { SpinnerComponent } from './spinner/spinner.component';\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { AssignStudentsDialogComponent } from './admin-dashboard/assign-students-dialog/assign-students-dialog.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport { SignupComponent } from './signup/signup.component';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { StudentDashboardComponent } from './student-dashboard/student-dashboard.component';\nimport { ViewQuestionsComponent } from './admin-dashboard/view-questions/view-questions.component';\nimport { TestComponentComponent } from './student-dashboard/test-component/test-component.component';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SpinnerComponent,\n    AdminDashboardComponent,\n    AssignStudentsDialogComponent,\n    SignupComponent,\n    StudentDashboardComponent,\n    ViewQuestionsComponent,\n    TestComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    MatButtonModule,\n    MatIconModule,\n    MatToolbarModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    MatRadioModule,\n    MatProgressSpinnerModule,\n    MatTableModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatSelectModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    SpinnerComponent,\n    AssignStudentsDialogComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { CustomerAccountsModel } from './Models/CommonModels';\n\nconst httpOptions = {\n  headers: new HttpHeaders({'Content-Type':'application/json; charset=utf-8'})\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonServiceService {\n\n  private apiEndPoint = environment.ApiPreLik;\n  isVisibleSource: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(private httpClient: HttpClient) { }\n\n  getUserSession(): Observable<boolean>{\n    return JSON.parse(localStorage.getItem('userSession'));\n  }\n\n  getCustomers(): Observable<any>{\n    return this.httpClient.get(this.apiEndPoint+'CustomerAccounts');\n  }\n\n  signUpUser(data): Observable<any>{\n    return this.httpClient.post(this.apiEndPoint+'CustomerAccounts/RegisterUser',data, httpOptions);\n  }\n\n  logIn(email: string, password: string):  Observable<any>{\n    return this.httpClient.get<CustomerAccountsModel>(this.apiEndPoint+'CustomerAccounts/Login/'+email+'/'+password);\n  }\n\n  addTest(data): Observable<any>{\n    return this.httpClient.post(this.apiEndPoint+'Admin/CreateTest',data,httpOptions);\n  }\n\n  GetTests(CustId): Observable<any>{\n    return this.httpClient.get<CustomerAccountsModel>(this.apiEndPoint+'Admin/GetTests/'+CustId);\n  }\n\n  DeleteTests(TestId): Observable<any>{\n    return this.httpClient.get<any>(this.apiEndPoint+'Admin/DeleteTests/'+TestId);\n  }\n\n  GetStudentDetails(TestId): Observable<any>{\n    return this.httpClient.get<any>(this.apiEndPoint+'Admin/GetStudentDetails/'+TestId);\n  }\n\n  GetAssignedStudentDetails(TestId): Observable<any>{\n    return this.httpClient.get<any>(this.apiEndPoint+'Admin/GetAssignedStudentDetails/'+TestId);\n  }\n\n  GetAllUserTests(custId: Number): Observable<any>{\n    return this.httpClient.get<any>(this.apiEndPoint+'Student/GetAllUserTests/'+custId);\n  }\n\n  GetTestPapersAdmin(TestId: Number): Observable<any>{\n    return this.httpClient.get<any>(this.apiEndPoint+'Admin/GetTestPapersAdmin/'+TestId);\n  }\n  \n  GetTestQuestions(TestId: Number): Observable<any>{\n    return this.httpClient.get<any>(this.apiEndPoint+'Student/GetTestQuestions/'+TestId);\n  }\n  \n  GenerateTestResult(data): Observable<any>{\n    return this.httpClient.post(this.apiEndPoint+'Student/GenerateTestResult',data,httpOptions);\n  }\n  \n  AddQuestions(data): Observable<any>{\n    return this.httpClient.post(this.apiEndPoint+'Admin/AddQuestions',data,httpOptions);\n  }\n  \n  AssignStudents(data): Observable<any>{\n    return this.httpClient.post(this.apiEndPoint+'Admin/AssignStudents',data,httpOptions);\n  }\n}\n\n","import { Component, OnInit, Input, EventEmitter, Output  } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as CryptoJs from 'crypto-js';\nimport { CustomerAccountsModel } from '../Models/CommonModels'\nimport { CommonServiceService } from '../common-service.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  signUpResponse: any ;\n  showSpinner : boolean =true;\n  invalidCred: boolean = false;\n  logInBtnVisible = true;\n\n  formLogin: FormGroup = new FormGroup ({\n    email: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required])\n  })\n\n\n  constructor(private commonServiceService: CommonServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  login(){\n    if(this.formLogin.valid) {\n      let EmailId = this.formLogin.value.email;\n      let pwd = this.formLogin.value.password;\n      this.logInBtnVisible = false;\n      this.commonServiceService.logIn(EmailId,pwd).subscribe(data=>{\n        if(data) {\n          localStorage.setItem('userSession', JSON.stringify(data));\n          this.commonServiceService.isVisibleSource.next(true);\n          if(data.roleId == 1) {\n            this.router.navigate(['/adminDashBoard']);\n          }else if(data.roleId == 2) {\n            this.router.navigate(['/studentDashBoard']);\n          }\n        } else {\n          this.invalidCred = true;\n          this.logInBtnVisible = true;\n        }\n      });\n\n    }\n  }\n}\n","<mat-card>\n    <mat-card-title>Login</mat-card-title>\n        <form [formGroup]=\"formLogin\" (ngSubmit)=\"login()\">\n            <p>\n                <mat-form-field>\n                    <input type=\"text\" matInput placeholder=\"Email\" formControlName=\"email\" required>\n                    <mat-error *ngIf=\"formLogin.get('email').hasError('required')\">Please Enter email</mat-error>\n                </mat-form-field>\n            </p>\n            <p>\n                <mat-form-field>\n                    <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\" required>\n                    <mat-error *ngIf=\"formLogin.get('password').hasError('required')\">Please Enter password</mat-error>\n                </mat-form-field>\n            </p>\n            <mat-error *ngIf=\"invalidCred\">Invalid Credentials</mat-error>\n            \n            <div class=\"button\" style=\"display: flex; justify-content: flex-end;\">\n                <a routerLink=\"/signUp\" routerLinkActive=\"active\" class=\"btnsignUp\">SignUp</a>\n                <button mat-raised-button color=\"primary\" type=\"submit\" class=\"btnLogIn\" [disabled]=\"!logInBtnVisible\">Login</button>\n              </div>\n        </form>\n</mat-card>\n","import { Component, OnInit, Input, EventEmitter, Output  } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CommonServiceService } from '../common-service.service';\nimport { Router } from '@angular/router';\nimport { CustomerAccountsModel } from '../Models/CommonModels';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  \n  CustomerAccountsSignUp;\n  roleId: number = 2 ;\n  emailExist = false;\n  signUpbtn = true;\n  mobNumberPattern = \"^((\\\\+91-?)|0)?[0-9]{10}$\"; \n\n  formSignUp: FormGroup = new FormGroup ({\n    firstName: new FormControl('', [Validators.required]),\n    lastName: new FormControl('', [Validators.required]),\n    email: new FormControl('', [Validators.required, , Validators.email]),\n    pwd: new FormControl('', [Validators.required]),\n    roleId: new FormControl(''),\n    number: new FormControl('', [Validators.required, Validators.pattern(this.mobNumberPattern)]),\n  })\n  constructor(private commonServiceService: CommonServiceService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n  signUp(){\n    if(this.formSignUp.valid) {\n      this.signUpbtn = false;\n      let CustomerAccounts: CustomerAccountsModel = {\n        CustId : 0,\n      FirstName : this.formSignUp.value.firstName,\n      LastName : this.formSignUp.value.lastName,\n      EmailId : this.formSignUp.value.email,\n      Pwd : this.formSignUp.value.pwd,\n      RoleId : this.formSignUp.value.roleId,\n      Role : (this.formSignUp.value.roleId == 1 ? 'admin' : 'student'),\n      Phone : this.formSignUp.value.number\n      }\n      this.CustomerAccountsSignUp = CustomerAccounts;\n      this.commonServiceService.signUpUser(this.CustomerAccountsSignUp).subscribe(data => {\n        if(data == 1) {\n          // alert('SignUp Success');\n          this.router.navigate(['']);\n        }\n         else if(data == 2) {\n          this.emailExist = true;\n          this.signUpbtn = true;\n        }\n      });\n      \n    }\n  }\n}\n","<mat-card>\n    <mat-card-title>Sign Up</mat-card-title>\n    <form [formGroup] = \"formSignUp\" (ngSubmit) = \"signUp()\">\n        <p>\n            <mat-form-field>\n                <input type=\"text\" matInput placeholder=\"First Name\" formControlName=\"firstName\" required>\n                <mat-error *ngIf=\"formSignUp.get('firstName').hasError('required')\">Please Enter First Name</mat-error>\n            </mat-form-field>\n        </p>\n        <p>\n            <mat-form-field>\n                <input type =\"text\" matInput placeholder=\"Last Name\" formControlName=\"lastName\" required>\n                <mat-error *ngIf=\"formSignUp.get('lastName').hasError('required')\">Please Enter Last Name</mat-error>\n            </mat-form-field>\n        </p>\n        <p>\n            <mat-form-field>\n                <input type =\"email\" matInput placeholder=\"Email\" formControlName=\"email\" required>\n                <mat-error *ngIf=\"formSignUp.get('email').hasError('required')\">Please Enter Email</mat-error>\n            </mat-form-field>\n            <mat-error *ngIf=\"emailExist\">Email Exists</mat-error>\n        </p>\n        <p>\n            <mat-form-field>\n                <input type =\"number\" matInput placeholder=\"Phone\" formControlName=\"number\" required>\n                <mat-error *ngIf=\"formSignUp.get('number').hasError('required')\">Please Enter Mobile Number</mat-error>\n                <mat-error *ngIf=\"formSignUp.get('number').hasError('pattern')\">Please Enter Valid Number</mat-error>\n            </mat-form-field>\n        </p>\n        <p>\n           <mat-form-field>\n               <input type =\"password\" matInput placeholder=\"Password\" formControlName=\"pwd\" required>\n               <mat-error *ngIf=\"formSignUp.get('pwd').hasError('required')\">Please Enter Password</mat-error>\n           </mat-form-field>\n       </p>\n       <div class=\"form-group\">\n           <mat-radio-group aria-label=\"Select an option\" [(ngModel)]=\"roleId\" formControlName=\"roleId\">\n             <mat-radio-button  [value]=\"1\" style=\"padding-right: 15px;\">Admin</mat-radio-button>\n             <mat-radio-button [value]=\"2\">Student</mat-radio-button>\n           </mat-radio-group>\n         </div>\n       <div class=\"button\" style=\"display: flex; justify-content: flex-end;\">\n           <a routerLink=\"\" routerLinkActive=\"active\" class=\"btnLogin\">Login</a>\n           <button mat-raised-button color=\"primary\" type=\"submit\" class=\"btnSignUp\" [disabled]=\"!signUpbtn\">SignUp</button>\n         </div>\n    </form>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spinner',\n  templateUrl: './spinner.component.html',\n  styleUrls: ['./spinner.component.css']\n})\nexport class SpinnerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-spinner></mat-spinner>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonServiceService } from '../common-service.service';\n\n@Component({\n  selector: 'app-student-dashboard',\n  templateUrl: './student-dashboard.component.html',\n  styleUrls: ['./student-dashboard.component.css']\n})\nexport class StudentDashboardComponent implements OnInit {\n  assignedTests: any;\n  userSession: any;\n  displayedColumns: string[] = ['testId', 'testName', 'noOfQuestions', 'duration', 'passPercentage', 'attempted', 'percentage', 'takeTest'];\n  constructor(private commonServiceService: CommonServiceService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.commonServiceService.getUserSession() != null) {\n      this.userSession = JSON.parse(localStorage.getItem('userSession'));\n      this.getTestDetails();\n    } else {\n      this.router.navigate(['']);\n    }\n  }\n\n  getTestDetails() {\n    this.commonServiceService.GetAllUserTests(this.userSession.custId).subscribe(res => {\n      if (res) {\n        this.assignedTests = res;\n      }\n    });\n  }\n\n  takeTest(event) {\n    this.router.navigate(['/testComponentComponent'], { queryParams: { TestId: event.testId, TestName: event.testName, duration: event.duration } });\n  }\n\n\n}","<div style=\"margin-top: 3%;\">\n    <table *ngIf=\"assignedTests.length > 0  else noTestBlock\" mat-table [dataSource]=\"assignedTests\" class=\"mat-elevation-z8\">\n\n        <!--- Note that these columns can be defined in any order.\n        The actual rendered columns are set as a property on the row definition\" -->\n\n        <!-- S.no Column -->\n        <ng-container matColumnDef=\"testId\">\n            <th mat-header-cell *matHeaderCellDef> S.no </th>\n            <td mat-cell *matCellDef=\"let element; let i = index;\"> {{i+1}} </td>\n        </ng-container>\n\n        <!-- Test Name Column -->\n        <ng-container matColumnDef=\"testName\">\n            <th mat-header-cell *matHeaderCellDef> Test Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.testName}} </td>\n        </ng-container>\n\n        <!-- No Of Questions Column -->\n        <ng-container matColumnDef=\"noOfQuestions\">\n            <th mat-header-cell *matHeaderCellDef> No Of Questions </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.noOfQuestions}} </td>\n        </ng-container>\n\n        <!-- Duration Column -->\n        <ng-container matColumnDef=\"duration\">\n            <th mat-header-cell *matHeaderCellDef> Duration </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.duration}} </td>\n        </ng-container>\n\n        <!-- Pass Percentage Column -->\n        <ng-container matColumnDef=\"passPercentage\">\n            <th mat-header-cell *matHeaderCellDef> Pass Percentage </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.passPercentage}} </td>\n        </ng-container>\n\n        <!-- Attempted Column -->\n        <ng-container matColumnDef=\"attempted\">\n            <th mat-header-cell *matHeaderCellDef> Attempted </th>\n            <td mat-cell *matCellDef=\"let element\"> {{(element.attempted === 1)? 'Yes' : 'No'}} </td>\n        </ng-container>\n\n        <!-- Percentage Column -->\n        <ng-container matColumnDef=\"percentage\">\n            <th mat-header-cell *matHeaderCellDef> Percentage </th>\n            <td mat-cell *matCellDef=\"let element\"> {{((element.percentage === 0) && (element.attempted === 0))? '-' : element.percentage}} </td>\n        </ng-container>\n\n        <!-- Take Test Column -->\n        <ng-container matColumnDef=\"takeTest\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let element\"><button mat-raised-button color=\"primary\" [disabled]=\"(element.attempted === 1)\" (click)=\"takeTest(element)\">Take Test</button></td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n    <ng-template #noTestBlock>\n        <div class=\"noTestCLS\">\n            <h2>No Tests Assigned</h2>\n        </div>\n    </ng-template>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonServiceService } from 'src/app/common-service.service';\nimport { AddQuestions, selectedListModel, TestChoiceModel } from 'src/app/Models/CommonModels';\n\n@Component({\n  selector: 'app-test-component',\n  templateUrl: './test-component.component.html',\n  styleUrls: ['./test-component.component.css']\n})\nexport class TestComponentComponent implements OnInit {\n  TestId: number;\n  TestName: any;\n  Duration: number;\n  interval;\n  testTimeLeft;\n  testPapers: any;\n  selectedAnsers: any = [];\n  nullItem: any;\n  finalChoices: any;\n  testContent = true;\n  submitDisable = false;\n\n  constructor(private commonServiceService: CommonServiceService, private route: ActivatedRoute, private router: Router) { }\n\n  ngOnInit(): void {\n    if (this.commonServiceService.getUserSession() != null) {\n      this.route.queryParams.subscribe(queryParams => {\n        this.TestId = Number(queryParams['TestId']);\n        this.TestName = queryParams['TestName'];\n        this.Duration = Number(queryParams['duration']);\n      });\n      this.getTestQuestions();\n      this.startTimer(this.Duration * 60)\n    } else {\n      this.router.navigate(['']);\n    }\n  }\n\n  getTestQuestions() {\n    this.commonServiceService.GetTestQuestions(this.TestId).subscribe(data => {\n      if (data) {\n        this.testPapers = data;\n        if (this.testPapers.length == 0) {\n          this.testContent = false;\n        }\n      }\n    });\n  }\n\n  startTimer(timeLeft) {\n    this.interval = setInterval(() => {\n      if (timeLeft > 0) {\n        timeLeft--;\n        this.testTimeLeft = this.getTimeInTimer(timeLeft);\n      } else {\n        this.testSubmit();\n      }\n    }, 1000)\n  }\n\n  getTimeInTimer(d) {\n    d = Number(d);\n    var h = Math.floor(d / 3600);\n    var m = Math.floor(d % 3600 / 60);\n    var s = Math.floor(d % 3600 % 60);\n\n    var hDisplay = h > 0 ? h + (h == 1 ? \" hour, \" : \" hours, \") : \"\";\n    var mDisplay = m > 0 ? m + (m == 1 ? \" minute, \" : \" minutes, \") : \"\";\n    var sDisplay = s > 0 ? s + (s == 1 ? \" second\" : \" seconds\") : \"\";\n    return hDisplay + mDisplay + sDisplay;\n  }\n\n  answerClick(choiceObj) {\n    if (this.selectedAnsers.length > 0) {\n      if (this.selectedAnsers.filter((item) => item.questionId === choiceObj.questionId).length > 0) {\n        const index = this.selectedAnsers.indexOf(choiceObj);\n        this.selectedAnsers.splice(index, 1);\n      }\n    }\n    this.selectedAnsers.push(choiceObj);\n  }\n\n  testSubmit() {\n    this.submitDisable = true;\n    if (this.selectedAnsers.length == 0) {\n      this.nullItem = this.testPapers[0].choices[0];\n      this.nullItem.choiceAnswer = '';\n      this.nullItem.choiceId = 0;\n      this.selectedAnsers.push(this.nullItem);\n    }\n\n    let CustId = JSON.parse(localStorage.getItem('userSession')).custId;\n    let finalChoices: TestChoiceModel = {\n      custId: CustId,\n      testId: this.TestId,\n      choices: this.selectedAnsers\n    }\n    this.commonServiceService.GenerateTestResult(finalChoices).subscribe(data => {\n      this.router.navigate(['/studentDashBoard']);\n      if(data != 1) {\n        this.submitDisable = false\n      }\n    });\n  }\n}\n","<div *ngIf=\"testContent else noTestBlock\">\n    <div style=\"display: flex; justify-content: flex-end;\">\n        <p style=\"font-size: 20px; font-weight: bold;\">Time Left: {{testTimeLeft}}</p>\n    </div>\n    <br/>\n    <div *ngFor=\"let question of testPapers index as i\">\n        <p style=\"margin-left: 10%;\">{{i+1}}. {{question.question}}</p>\n        <div>\n            <mat-radio-group>\n                <div *ngFor=\"let choice of question.choices\">\n                    <mat-radio-button style=\"width: 100%; margin-left: 13%;\" class=\"example-radio-button\" (change)=\"answerClick(choice)\" [value]=\"choice\">\n                        <p>{{choice.choiceAnswer}}</p>\n                    </mat-radio-button>\n                </div>\n            </mat-radio-group>\n        </div>\n        <br/>\n    </div>\n    <div class=\"button\" style=\"display: flex; justify-content: flex-end;\">\n        <button mat-raised-button color=\"primary\" class=\"btnSubmit\" (click)=\"testSubmit()\" [disabled]=\"submitDisable\">Submit</button>\n    </div>\n</div>\n<ng-template #noTestBlock>\n    <div class=\"noTestCLS\">\n        <h2>No Questions Assigned</h2>\n    </div>\n    <div class=\"btnBack\"><button mat-raised-button color=\"primary\" routerLink=\"/studentDashBoard\" routerLinkActive=\"active\">Back</button></div>\n</ng-template>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  ApiPreLik: 'https://localhost:44355/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}